#+title: Bank Deposits Over Time
#+author: Matt Brigida
#+email: mdbrigida@gmail.com

#+begin_src python :session py :exports none :results none
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import plotly.express as px
#+end_src


#+begin_src python :session py :exports none :results none
panel = pd.read_csv("../../../1_FDIC/1_FDIC_SDI_data/build_panel/panel_python_20210630/6_final_panel_with_mdi.csv")
#+end_src

Overall:

#+begin_src python :session py :exports none :results none
grouped = panel[["quarter", "dep", "asset"]].groupby(["quarter"]).sum()

dep_asset = grouped["dep"] / grouped["asset"]
dep_asset = pd.DataFrame(dep_asset)
dep_asset.rename(columns={ dep_asset.columns[0]: "Deposits to Assets" }, inplace = True)

# plotly-----
all_fig = px.line(dep_asset, y="Deposits to Assets", title="Total Bank Deposits to Assets Over Time", template="plotly_dark")
all_fig.write_html("all_deposit_plot.html")
#+end_src

#+begin_comment
[[./all_deposit_plot.png]]
#+end_comment

#+begin_export html
<iframe src="./all_deposit_plot.html" width="100%" height="500px"></iframe>
#+end_export

By size:

Spit the data into quartiles.


#+begin_src python :session py :exports none :results none
all_quarters = panel['quarter'].unique()
quantiles = pd.DateFrame([panel[panel['quarter'] == q]['asset'].quantile([0.25,0.5,0.75]) for q in all_quarters])
quantiles.set_index(all_quarters, inplace=True)

panel_small = panel[panel["asset"] ]

grouped_b = panel_b[["quarter", "dep", "asset"]].groupby(["quarter"]).sum()

#+end_src

By MDI Status:


#+begin_src python :session py :exports none :results none
## by MDI type--------

panel_b = panel[panel["Minority Status_(Alpha_Code)"] == "B"]

grouped_b = panel_b[["quarter", "dep", "asset"]].groupby(["quarter"]).sum()

dep_asset_b = grouped_b["dep"] / grouped_b["asset"]
dep_asset_b = pd.DataFrame(dep_asset_b)
dep_asset_b.rename(columns={ dep_asset_b.columns[0]: "Black-owned MDIs" }, inplace = True)

dep_asset_by_mdi = dep_asset.join(dep_asset_b, how = "outer")
dep_asset_by_mdi.rename(columns={ dep_asset_by_mdi.columns[0]: "All Banks"}, inplace = True)

#---

panel_h = panel[panel["Minority Status_(Alpha_Code)"] == "H"]

grouped_h = panel_h[["quarter", "dep", "asset"]].groupby(["quarter"]).sum()

dep_asset_h = grouped_h["dep"] / grouped_h["asset"]
dep_asset_h = pd.DataFrame(dep_asset_h)
dep_asset_h.rename(columns={ dep_asset_h.columns[0]: "Hispanic-owned MDIs" }, inplace = True)

dep_asset_by_mdi = dep_asset_by_mdi.join(dep_asset_h, how = "outer")

#---

panel_a = panel[panel["Minority Status_(Alpha_Code)"] == "A"]

grouped_a = panel_a[["quarter", "dep", "asset"]].groupby(["quarter"]).sum()

dep_asset_a = grouped_a["dep"] / grouped_a["asset"]
dep_asset_a = pd.DataFrame(dep_asset_a)
dep_asset_a.rename(columns={ dep_asset_a.columns[0]: "Asian-owned MDIs" }, inplace = True)

dep_asset_by_mdi = dep_asset_by_mdi.join(dep_asset_a, how = "outer")


mdi_fig = px.line(dep_asset_by_mdi, y=["All Banks", "Black-owned MDIs", "Hispanic-owned MDIs", "Asian-owned MDIs"], title="Bank Deposits to Assets by MDI Status Over Time", template="plotly_dark")
mdi_fig.write_html("mdi_deposit_plot.html")
#+end_src

#+begin_export html
<iframe src="./mdi_deposit_plot.html" width="100%" height="500px"></iframe>
#+end_export
